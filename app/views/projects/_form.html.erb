<script type="text/javascript">

$('document').ready(function(){
  var counter = 1;
  $('#add').click(function(){
      counter++;
      var new_field = '<div class="screenshot"><input id="project_images_attributes_'+counter+'_upload" name="project[images_attributes]['+counter+'][upload]" type="file"><input id="project_images_attributes_'+counter+'_image_type" name="project[images_attributes]['+counter+'][image_type]" type="hidden" value="screenshot"><input id="project_images_attributes_'+counter+'_image_type" name="project[images_attributes]['+counter+'][image_type]" type="hidden" value="screenshot"></div>';
          $('.screenshot:last').append(new_field);
          console.log(counter);
  });
  $('#subtract').click(function(){
      if (counter > 1) {
        $('.screenshot:last').remove();
        counter --};
        console.log(counter);
  });  

  // $('.submit').click(function(event){
  //   var email = $('#email').val();
  //   console.log(email);
  //   var emailPattern = /^[A-Za-z0-9!@#]/g;
  //   if (!emailPattern.test(email)) {
  //     $('.error').show();
  //     event.preventDefault();
  //   } else {
  //     console.log('email was an email');
  //   }
  // });

  //form validations go here

  //hide errors
  $('.errors').hide();
  //github repo name must be lowercase & include a /. can not be blank. check on form input blur

function validateGithub() {
    var value = $("#github_repo").val();
    console.log(value);
    if (value.indexOf('/') != -1) {
      console.log('this shiz is valid');
      $('.errors.github_error').hide();
      return true;
    }
  else {
    console.log('what the heck');
    $('.errors.github_error').show();
    }
  }


$("#github_repo").blur(function(){
  validateGithub();
});

// function validForm(){
//     return validateGithub() && checkname() && passwordcheck();
// }


$('.submit').click(function(event){
  if(validateGithub()){
 $(this).submit();
  }else{
    event.preventDefault();
    $('.errors.submits').show();
  }
});






  //url should be a full url (includes regex for url)

  //cover image has to exist

  //screenshot has to exist


});
</script>
<style type="text/css">
  .errors{
    color:#ff0000;
  }

</style>

<%= form_for(@project, :html => { :multipart => true }) do |f| %>

  <div class="field">
    <label>Github Repository (username/repo-name)</label><br />
    <input type="text_field" name="project[repo_name]" id="github_repo">
    <p class="errors github_error">valid repo, plskthx</p>
  </div>

  <div class="field">
    <label>Live Project URL</label>
    <input type="text_field" name="project[live_url]" id="project_url">
    <p class="errors">valid url, plskthx</p>
  </div>

  <% if flash[:error] %>
    <p class='error' style="color:red"><%= flash[:error] %></p>
  <% end %>

  <p class='error' style="color:red"><%= @project.errors.messages[:"images.upload_file_size"] %></p>

    <div class="field">
    <label>Semester</label>
    <%= f.select :semester_id, options_for_select([["Flatiron 000", "000"], ["Flatiron 001", "001"]], @project.semester_id) %>
  </div>

  <div class="field">
    <label>Upload cover image for your app:</label>
    <%= f.fields_for :images do |field| %>
      <%= field.file_field :upload %>
      <%= field.hidden_field :image_type, :value => "cover" %>
      <%= field.hidden_field :position, :value => "0" %>
    <% end %>
        <p class="errors">put in a picture, plskthx</p>
  </div> 

  <div class="field">

    <label>Upload screenshots of your app:</label>

    <div class="field">
    <%= f.fields_for :images do |field| %>
      <%= field.file_field :upload %>
      <%= field.hidden_field :image_type, :value => "screenshot" %>
      <%= field.hidden_field :position, :value => "0" %>
    <% end %>
  </div>
    <div class="screenshot">
    </div>
  </div>
  <input type="button" name="add" id="add" value="+" />
  <input type="button" name="remove" id="subtract" value="-" /><br><br>

<br>
    <%= f.submit :class => "submit" %>
    <p class="errors submits">fix that shit, then submit!</p>

<% end %>
